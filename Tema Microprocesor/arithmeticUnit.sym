USER SYMBOL by DSCH 3.5
DATE 5/10/2018 7:40:29 PM
SYM  #arithmeticUnit
BB(0,0,40,110)
TITLE 10 -7  #arithmeticUnit
MODEL 6000
REC(5,5,30,100)
PIN(0,60,0.00,0.00)AddSub
PIN(0,100,0.00,0.00)A0
PIN(0,90,0.00,0.00)A1
PIN(0,80,0.00,0.00)A2
PIN(0,70,0.00,0.00)A3
PIN(0,10,0.00,0.00)EnableAlu
PIN(0,50,0.00,0.00)B0
PIN(0,40,0.00,0.00)B1
PIN(0,30,0.00,0.00)B2
PIN(0,20,0.00,0.00)B3
PIN(40,10,2.00,1.00)IB_Alu3
PIN(40,20,2.00,1.00)IB_Alu2
PIN(40,30,2.00,1.00)IB_Alu1
PIN(40,40,2.00,1.00)IB_Alu0
PIN(40,50,2.00,1.00)Carry
LIG(0,60,5,60)
LIG(0,100,5,100)
LIG(0,90,5,90)
LIG(0,80,5,80)
LIG(0,70,5,70)
LIG(0,10,5,10)
LIG(0,50,5,50)
LIG(0,40,5,40)
LIG(0,30,5,30)
LIG(0,20,5,20)
LIG(35,10,40,10)
LIG(35,20,40,20)
LIG(35,30,40,30)
LIG(35,40,40,40)
LIG(35,50,40,50)
LIG(5,5,5,105)
LIG(5,5,35,5)
LIG(35,5,35,105)
LIG(35,105,5,105)
VLG module arithmeticUnit( AddSub,A0,A1,A2,A3,EnableAlu,B0,B1,
VLG  B2,B3,IB_Alu3,IB_Alu2,IB_Alu1,IB_Alu0,Carry);
VLG  input AddSub,A0,A1,A2,A3,EnableAlu,B0,B1;
VLG  input B2,B3;
VLG  output IB_Alu3,IB_Alu2,IB_Alu1,IB_Alu0,Carry;
VLG  wire w7,w8,w10,w11,w16,w17,w18,w20;
VLG  wire w21,w22,w23,w26,w27,w29,w30,w32;
VLG  wire w33,w34,w35,w36;
VLG  mux #(7) mux_1(w17,A2,w16,AddSub);
VLG  not #(6) inv_2(w16,A2);
VLG  mux #(7) mux_3(w8,A0,w18,AddSub);
VLG  mux #(7) mux_4(w21,A3,w20,AddSub);
VLG  not #(6) inv_5(w20,A3);
VLG  not #(6) inv_6(w22,A1);
VLG  mux #(7) mux_7(w23,A1,w22,AddSub);
VLG  not #(6) inv_8(w18,A0);
VLG  mux #(7) mux_9(w7,vss,vdd,AddSub);
VLG  bufif1 #(6) bufif1_10(IB_Alu3,w32,EnableAlu);
VLG  bufif1 #(6) bufif1_11(IB_Alu2,w30,EnableAlu);
VLG  bufif1 #(6) bufif1_12(IB_Alu1,w27,EnableAlu);
VLG  bufif1 #(6) bufif1_13(IB_Alu0,w11,EnableAlu);
VLG  xor #(9) xor2_1_14(w33,B0,w8);
VLG  assign w10=(B0&w8)|(w7&(B0|w8))
VLG  xor #(9) xor2_2_15(w11,w33,w7);
VLG  xor #(9) xor2_1_16(w34,B1,w23);
VLG  assign w26=(B1&w23)|(w10&(B1|w23))
VLG  xor #(9) xor2_2_17(w27,w34,w10);
VLG  xor #(9) xor2_1_18(w35,B2,w17);
VLG  assign w29=(B2&w17)|(w26&(B2|w17))
VLG  xor #(9) xor2_2_19(w30,w35,w26);
VLG  xor #(9) xor2_1_20(w36,B3,w21);
VLG  assign Carry=(B3&w21)|(w29&(B3|w21))
VLG  xor #(9) xor2_2_21(w32,w36,w29);
VLG endmodule
FSYM
